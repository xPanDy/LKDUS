
@using LKDUS_UI.Models
@using LKDUS_UI.Static
@using LKDUS_UI.Contracts
@using System.Net.Http
@using Microsoft.Extensions.Logging

@inject NavigationManager navManager
@inject IMachinesRepository machineRepo
 
@page "/machineedit/{Id}"
 




<h3>Rediģēt iekārtu</h3>
<hr />
<br />
@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    
    <label>nepareiza izvēle, mēģini vēlreiz</label>
}
else if (Model == null)
{
    <LoadingMessage Message="Ielādē iekārtas detaļas" />
}
else
{
    <EditForm Model="Model" OnValidSubmit="HandleUpdate">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="title">Iekārta</label>
            <InputText @bind-Value="Model.Name" class="form-control" id="title" />
        </div>
        <div class="form-group">
            <label for="isbn">Apraksts</label>
            <InputText @bind-Value="Model.Description" class="form-control" id="isbn" />
        </div>
   
        <button class="btn btn-primary" type="submit">
            <span class="oi oi-pencil"></span>
            Saglabāt
        </button>
        <button @onclick="BackToList" class="btn btn-outline-secondary">
            <span class="oi oi-media-skip-backward"></span>
            Atpakaļ
        </button>
    </EditForm>
}

@code{
    [Parameter]
    public string Id { get; set; }

    private Machine Model = new Machine();
    
    private bool isSuccess = true;
     

    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        Model = await machineRepo.Get(Endpoints.MachinesEndpoint, id);
        
    }

    private async Task HandleUpdate()
    {
        

        

        isSuccess = await machineRepo.Update(Endpoints.MachinesEndpoint, Model, Model.Id);
        if (isSuccess)
        {
             
            BackToList();
        }
        
    }

     


    private void BackToList()
    {
        navManager.NavigateTo("/machines/");
    }
}