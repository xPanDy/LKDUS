

@page "/userdelete/{Id}"
@*@attribute [Authorize(Roles = "Administrator")]*@


@using LKDUS_UI.Models
@using LKDUS_UI.Static
@using LKDUS_UI.Contracts
@using System.Net.Http
@using Microsoft.Extensions.Logging


@inject NavigationManager navManager
@inject IAuthenticationRepository authRepo

<h3>Esi pārliecināts ka vēlies dzēst šo ierakstu?</h3>
<hr />
<br />
@if (!isSuccess)
{
    <label> kaut kas nav</label>
}


@if (string.IsNullOrWhiteSpace(Id))
{
    @*<ErrorMessage Message="Invalid Selection. Please Try Again" />*@
    <label>nepareiza izvēle, mēģini vēlreiz!</label>
}
else if (Model == null)
{
    <label>Notiek lietotāja datu ielāde</label>
}
else
{
    <div class="row">
        <div class="col-6">
            <table class="table table-responsive">
                <tr>
                    <td>
                        <strong>Nosaukums</strong>
                    </td>
                    <td>@Model.UserName</td>
                </tr>




            </table>
        </div>

    </div>
}

<button @onclick="DeleteUser" class="btn btn-danger">
    <span class="oi oi-delete"></span>
    Dzēst lietotāju
</button>
@if (!isSuccess)
{
    <label>nav izdzēsts</label>
}
<button @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Atpakaļ uz sarakstu
</button>

@code {
    [Parameter]
    public string Id { get; set; }

    private LoginModel Model = new LoginModel();
    private bool isSuccess = true;

    protected override async Task OnInitializedAsync()
    {
        // int id = Convert.ToInt32(Id);
        Model = await authRepo.Get(Endpoints.AspUsersEndpoint, Id);
    }

    private async Task DeleteUser()
    {
        //_fileUpload.RemoveFile(Model.Image);
        isSuccess = await authRepo.DeleteUserById( Endpoints.AspUsersEndpoint,  Model.Id);
        if (isSuccess)
        {
            //_toastService.ShowError("Book Deleted Successfully", "");
            BackToList();
        }

    }

    private void BackToList()
    {
        navManager.NavigateTo("/users/");
    }

}
