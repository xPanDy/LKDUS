@page "/index"
@page "/login"
@page "/"

@using LKDUS_UI.Models
@using LKDUS_UI.Static
@using LKDUS_UI.Contracts
@using System.Net.Http


@inject IAuthenticationRepository authRepo
@inject NavigationManager navManager
<div class="card">
    <h3 class="card-title">Ieiešana sistēmā</h3>
  
    
    @if (!response)
    {
        <div>Kaut kas notika greizi ar ieiešanu sistēmā</div>
    }

    @if (LoginModels == null)
    {
        <LoadingMessage Message="Notiek lietotāju ielāde..." />
    }
    else
    {

        <div class="card-body">
            <EditForm Model="Model" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label for="userName">Izvēlieties lietotāju!</label>



                    <div id="userName" name="userName">
                        <select class="form-control form-control-lg" @bind="Model.UserName">

                            @foreach (var model in LoginModels)

                            {

                                <option class="form-control">@model.UserName</option>



                            }

                        </select>

                        <p> </p>

                    </div>


                    <ValidationMessage For="@(() => Model.UserName)" />
                </div>


                @*<div class="form-group">
                        <select>
                            @foreach (var model in LoginModels)
                                {
                                    <option value="On">@model.UserName</option>

                                }

                            <option value="Off">Off</option>
                        </select>
                        <p> </p>

                    </div>*@


                @*<div class="form-group">
                        <label for="password">Password</label>
                        <InputText Id="password" type="password" class="form-control" @bind-Value="Model.Password" />
                        <ValidationMessage For="@(() => Model.Password)" />
                    </div>*@

                <button type="submit" class="btn btn-primary btn-block">Ieiet!</button>

            </EditForm>
        </div>
    }
</div>


@code {

    private IList<LoginModel> LoginModels;
    private LoginModel Model = new LoginModel();
    private bool response = true;
    private bool response2 = true;
    private async Task HandleLogin()
    {

        


        response = await  authRepo.Login(Model);
        if (response)
        {


             this.navManager.NavigateTo("/measurementpositions");


        }

    }
    protected async override Task OnInitializedAsync()
    {
        LoginModels = await authRepo.Get(Endpoints.GetUsersEndpoint);  
        Model = LoginModels.First();
    }
    void SomeStartupMethod()
    {
        // Do Some Work
    }

    Task SomeStartupTask()
    {
        // Do some task based work
        return Task.CompletedTask;
    }







}

