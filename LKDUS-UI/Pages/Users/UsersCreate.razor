@page "/usercreate"
@*@attribute [Authorize(Roles = "Administrator")]*@

@using LKDUS_UI.Models
@using LKDUS_UI.Static
@using LKDUS_UI.Contracts
@using System.Net.Http
@using Microsoft.Extensions.Logging

@inject NavigationManager navManager
@inject IAuthenticationRepository authRepo
@*@inject IToastService _toastService*@

<h3>Lietotāju izveidošanas forma</h3>
<hr />
<br />
@if (!isSuccess)
{
    <h3>"Ups, ir problēma, kaut kas nogāja greizi" </h3>
}

<EditForm Model="Model" OnValidSubmit="HandleCreate">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="title">Lietotāja vārds </label>
        <InputText @bind-Value="Model.UserName" class="form-control" id="title" />
    </div>
   
    @*<div class="form-group">
            <label for="price">Price</label>
            <InputNumber @bind-Value="Model.Price" class="form-control" id="price" />
        </div>
        <div class="form-group">
            <label for="author">Authors</label>
            <select @bind="Model.AuthorId" class="form-control" id="author">
                <option value="">-- Select Author --</option>
                @if (Authors != null)
                {
                    foreach (var author in Authors)
                    {
                        <option value="@author.Id">@author.Firstname @author.Lastname</option>
                    }
                }
            </select>
        </div>*@
    @*<div class="form-group">
        <label for="summary">Lietotāja loma</label>
        <InputTextArea @bind-Value="Model.Description" class="form-control" id="summary" />
    </div>*@

    <button class="btn btn-primary" type="submit">
        <span class="oi oi-pencil"></span>
        Izveidot
    </button>
    <button @onclick="BackToList" class="btn btn-outline-secondary">
        <span class="oi oi-media-skip-backward"></span>
        Atpakaļ
    </button>
    @if (!isSuccess)
    {
        <label class="alert-warning">Kaut kas nav labi!</label>
    }
</EditForm>

@code {


    private LoginModelCreate Model = new LoginModelCreate();
    
    private bool isSuccess = true;
    

    private async Task HandleCreate()
    {
        

        isSuccess = await authRepo.Register(   Model);
        if (isSuccess)
        {
            //_toastService.ShowSuccess("Book Created Successfully", "");
            BackToList();
        }
       
    }
 


    private void BackToList()
    {
        navManager.NavigateTo("/users/");
    }
}
