@page "/measurements/create/measurementdimensions"

@using LKDUS_UI.Models
@using LKDUS_UI.Static
@using LKDUS_UI.Contracts
@using System.Net.Http

@inject IMeasurementRepository repo
@inject NavigationManager navManager




 
<div class="card">
    <div class="container">
        <div class="row">
            <div class="col">
                <button type="button" @onclick="@Return" class="btn btn-primary btn-block">Atpakaļ</button>
            </div>
            <div class="col w-25"><h3 class="card-title">Mitrā finiera izmēri</h3></div>
            <div class="col">
                <button type="submit" class="btn btn-primary btn-block">Saglabāt</button>
            </div>

        </div>
    </div>
    <div>
        <div class="row">
            <div class="col w-25 h-25">
                <button class="btn btn-warning btn-block" @onclick="@NavigattetoWidth">
                    <h3>Lokšņu platums</h3>
                </button>
            </div>


            <div class="col"><button class="btn btn-warning btn-block" @onclick="@GoHeight"> <h3>Lokšņu garums</h3> </button></div>


            <div class="w-100"></div>

        </div>
        @*<div class="btn-group mr-2" role="group" aria-label="First group">
                <button type="button" class="btn btn-secondary btn-block btn-huge">Lokšņu platums</button>
                <button type="button" class="btn btn-secondary btn-block btn-huge">Lokšņu garums</button>

            </div>*@
    </div>

</div>






@code {
    private IList<Measurement> Model2;
    


    protected async override Task OnInitializedAsync()
    {
        Model2 = await this.repo.Get(Endpoints.MeasurementEndpoint);

    }




    private void OpenCreateForm(MouseEventArgs e)
    {

        this.navManager.NavigateTo("/measurements/create");
    }


    private void Return(MouseEventArgs e)
    {

        this.navManager.NavigateTo("/measurements/create");
    }


    private void NavigattetoWidth(MouseEventArgs e)
    {
       
        this.navManager.NavigateTo("/measurements/create/measurementdimensions/width");
    }

    private void GoHeight(MouseEventArgs e)
    {

        this.navManager.NavigateTo(" ");
    }
}
