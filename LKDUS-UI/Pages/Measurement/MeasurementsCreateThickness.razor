@page "/measurements/{measurementPositionId}/create/thickness" 

@using LKDUS_UI.Models
@using LKDUS_UI.Static
@using LKDUS_UI.Contracts
@using System.Net.Http

@inject IMeasurementRepository repo
@inject NavigationManager navManager
 


 <form>

    <div class="container">
        <div class="row">

            <div class="col">
                <button type="button" @onclick="@GoToCreation" class="btn btn-primary btn-block">Atpakaļ</button>
            </div>
            <div class="col w-25"><h3 class="card-title">Mitrā finiera biezums</h3></div>
            <div class="col">
                <button type="submit" class="btn btn-primary btn-block">Saglabāt</button>
            </div>
            @*<div class="col">
                <button type="button" @onclick="@GoToCreation" class="btn btn-primary">Atpakaļ</button>
            </div>
            <div class="col"> <h3 class="card-title">Mitrā finiera biezums</h3> </div>
            <div class="col ">
                <button type="submit" class="btn btn-success  pull-right">Saglabāt</button>
            </div>*@

        </div>
        </div>
    <div class="container">
        <div class="form-group">
            <label for="machine">Iekārta</label>
            <input id="machine" class="form-control" type="text" placeholder="Iekārta" readonly>

        </div>

        <table class="table table-hover table-striped">
            <thead>
                <tr>
                     
                    <th class="text-center" scope="col">Nr.</th>
                    <th class="text-center" scope="col">1</th>
                    <th class="text-center" scope="col">2</th>
                    <th class="text-center" scope="col">3</th>
                </tr>
            </thead>
            <tbody class="h-50">


                @if (sizesArray != null)
                {
                    for (int i = 0; i < sizesArray.GetLength(0); i++)
                    {

                        int tmp = i;
                        var rowNumber = i + 1;
                        <tr id="@tmp" style="background-color: @Background" @onclick="( e => HighlightSelected1(tmp, Background))">
                            
                            <td class="text-center" scope="row">@rowNumber</td>

                            @for (int j = 0; j < sizesArray.GetLength(1); j++)
                            {
                                <td style="background-color: @highlight2"
                                    class="text-center">
                                    @sizesArray[i, j]
                                </td>


                            }
                        </tr>

                    }
                }
               
            </tbody>
            
                <tr>
                   
                    <th class="text-center">
                        <button type="button" @onclick="(()=>setPos(0))" class="btn btn-primary alert-info">
                            <span class="badge badge-info">1.poz</span>
                            @*<br />
                    <span class="badge badge-light">
                        @sizesArray[@actPosRow, @actPosCol]
                        @rowPositionValues[0]

                    </span>*@
                        </button>
                    </th>
                    <th class="text-center">
                        <button type="button" @onclick="(()=>setPos(1))" class="btn btn-primary alert-info">
                            <span class="badge badge-info">2.poz</span>
                            @*<br />
                    <span class="badge badge-light">
                    @sizesArray[@actPosRow,@actPosCol]
                    @rowPositionValues[1]</span>*@
                        </button>
                    </th>
                    <th class="text-center">
                        <button type="button" @onclick="(()=>setPos(2))" class="btn btn-primary alert-info">
                            <span class="badge badge-info">3.poz</span>
                            @*<br />
                    <span class="badge badge-light">
                        @sizesArray[@actPosRow, @actPosCol]
                        @rowPositionValues[2]
                    </span>*@
                        </button>
                    </th>
                  
                </tr>
            
            <tr>
                <th scope="row"></th>
                <td> </td>
                <td class="text-center">
                    <button type="button" class="btn btn-success">
                        OK
                    </button>
                </td>
                <td></td>
                
            </tr>
        </table>
    </div>
   
     
     <div class="container" >

       
        
       
    </div>

    <div  class="container">

        <div class="d-flex justify-content-between">
            <button type="button" @onclick="Reduce" style="color:deeppink" class="btn btn-secondary btn-lg">-</button>
            <table class="table table-bordered table-bordered">
                <tbody>
                    <tr class="text-center">

                        <td>  <button type="button" @onclick="(()=>select(sizes[0]))" class="btn btn-info btn-lg btn-block">@sizes[0]</button></td>
                        <td><button type="button" @onclick="(()=>select(sizes[1]))" class="btn btn-info btn-lg btn-block" >@sizes[1]</button></td>
                        <td><button type="button" @onclick="(()=>select(sizes[2]))" class="btn btn-info btn-lg btn-block">@sizes[2]</button></td>

                    </tr>
                    <tr class="text-center" >
                        <td><button type="button" @onclick="(()=>select(sizes[3]))" class="btn btn-info btn-lg btn-block">@sizes[3]</button></td>
                        <td><button type="button" @onclick="(()=>select(sizes[4]))" class="btn btn-info btn-lg btn-block">@sizes[4]</button></td>
                        <td><button type="button" @onclick="(()=>select(sizes[5]))" class="btn btn-info btn-lg btn-block">@sizes[5]</button></td>
                    </tr>
                    <tr  class="text-center">
                        <td><button type="button" @onclick="(()=>select(sizes[6]))" class="btn btn-info btn-lg btn-block">@sizes[6]</button></td>
                        <td><button type="button" @onclick="(()=>select(sizes[7]))" class="btn btn-info btn-lg btn-block">@sizes[7]</button></td>
                        <td><button type="button" @onclick="(()=>select(sizes[8]))" class="btn btn-info btn-lg btn-block">@sizes[8]</button></td>
                    </tr>
                </tbody>
            </table>
            <button type="button" style="color:lawngreen" @onclick="Add" class="btn btn-secondary btn-lg">+</button>
        </div>

    </div>
    
    



</form>
 

@code {

    [Parameter]
    public string measurementPositionId { get; set; }
    private string Background { get; set; }//= "green";

    private void HighlightSelected1(int i, string higlith)
    {
        int a = i;
        actPosRow = i;
        //Background = Background == "green" ? "white" : "green";
    }

    private void HighlightSelected2()
    {
        // highlight2 = highlight2 == "" ? "red" : "";
    }//

    private void HighlightSelected3()
    {
        // highlight3 = highlight3 == "" ? "red" : "";
    }

    private void HighlightSelected4()
    {
        //  highlight4 = highlight4 == "" ? "red" : "";
    }

    private string highlight1 { get; set; } = "";
    private string highlight2 { get; set; } = "";
    private string highlight3 { get; set; } = "";
    private string highlight4 { get; set; } = "";

    private void select(decimal value)
    {
        //  rowPositionValues[actPos] = value;
        sizesArray[actPosRow, actPosCol] = value; ;
        // rowPositionValues

    }

    private void setPos( int i)
    {

        // Color = Color == "red" ? "green" : "red";
        actPos = i;
        actPosCol = i;
        //actPosCol
    }

    private string Color { get; set; } = "red";
    private IList<Measurement> Model2;

    private int actPos;


    private int actPosCol;
    private int actPosRow;


    private decimal[] sizes = new decimal[9];

    private decimal[,] sizesArray = new decimal[40,3];

    private decimal start = 1.51m;

    private decimal selectedValue;
    private decimal[] rowPositionValues = new decimal[3];
    private decimal positionValue;


    public List<decimal> range = new List<decimal>();

    protected async override Task OnInitializedAsync()
    {
        Model2 = await this.repo.Get(Endpoints.MeasurementEndpoint);

        int startValuesOfMeasurement = 0;
        for(int i = 0; i< sizesArray.GetLength(0); i++)
        {

            for(int j = 0; j< sizesArray.GetLength(1); j++)
            {

                sizesArray[i, j] = startValuesOfMeasurement;
            }
        }

        for (int i = 0; i< sizes.Length; i++)
        {

            sizes[i] = start  ;
            start = start + 0.01m;
        }

    }


    private void OpenCreateForm(MouseEventArgs e)
    {

        this.navManager.NavigateTo($"/measurements/{measurementPositionId}/create");
    }

    private void GoToCreation(MouseEventArgs e)
    {

        this.navManager.NavigateTo($"/measurements/{measurementPositionId}/create");
    }




    private void Reduce(MouseEventArgs e)
    {
        for (int i = 0; i < sizes.Length; i++)
        {

            sizes[i] = sizes[i] - 0.01m;
        }

    }


    private void Add(MouseEventArgs e)
    {
        //  Color = "black";

        for (int i = 0; i < sizes.Length; i++)
        {

            sizes[i] = sizes[i] + 0.01m;
        }
    }


}
