@page "/measurements/{measurementPositionId}/create/measurementdimensions/width"

@using LKDUS_UI.Models
@using LKDUS_UI.Static
@using LKDUS_UI.Contracts
@using System.Net.Http

@inject IMeasurementRepository repo
@inject NavigationManager navManager




<div class="container">

     
        <div class="row">
            <div class="col">
                <button type="button" @onclick="@BacktochooseDimension" class="btn btn-primary btn-block">Atpakaļ</button>
            </div>
            <div class="col w-25"><h3 class="card-title">Mitrā finiera platums</h3></div>
            <div class="col">
                <button type="submit" class="btn btn-primary btn-block">Saglabāt</button>
            </div>

        </div>
    
    <div class="row w-100">

        <div class="col w-75">

            @*<div class="container">*@

            <div class="row">

                <div class="col">

                    <button type="button" class="btn btn-outline-secondary btn-block"><h4>4x8</h4>
                    <br />
                    <h5>(13<span sstyle="color:red">XX</span >)</h5> </button>

                </div>


                <div class="col w-25"></div>

                <div class="col">

                    <button type="button" class="btn btn-outline-secondary btn-block"><h4>8x4</h4>
                     <br />
                    <h5>(28<span sstyle="color:red">XX</span >)</h5> </button>
                    

                </div>

                <div class="col w-25"></div>

                <div class="col">

                    <button type="button" class="btn btn-outline-secondary btn-block">
                        <h4>4x4</h4>
                        <br />
                        <h5>(13<span sstyle="color:red">XX</span>)</h5>
                    
                    </button>

                </div>

            </div>
            <div class="row">
                <div class="col">
                    <table class="table table-hover">

                        <thead>

                           
                            <tr>
                                <th rowspan="2">Nr.p.k.</th>
                                <th colspan="2">Lokšņu platums</th>
                                <th rowspan="2">Slīpums</th>
                            </tr>
                            <tr>
                                <td>kreisā</td>
                                <td>labā</td>
                            </tr>
                        </thead>
                        <tbody>
                            @if(positions != null) { 
                            @for (int i = 0; i < 10; i++)
                            {
                            var ind=i+1;
                                var tmpI = i;
                            <tr>
                                    <td>@ind</td>
                                @for (int j = 1; j < 3; j++)
                                {
                                var tmpJ = j;
                                    <td><button @onclick="( e => selectTableCell(tmpI,tmpJ))">@positions[i, j]</button></td>
                                    
                                }
                                <td>@positions[i,3]</td>
                            </tr>
                            }
                            }
                           
                        </tbody>

                    </table>
                </div>
            </div>
             

             

        </div>

        <div class="col w-25">
            
            <div class="d-flex justify-content-between">
                
                <table class="table table-bordered table-bordered">
                    <tbody>
                        <tr class="text-center">
                            <td> <button type="button" @onclick="Reduce" style="color:deeppink" class="btn btn-secondary btn-lg">-</button></td>
                        </tr>
                        <tr class="text-center">
                            <td>  <button type="button" @onclick="(()=>select(sizes[0]))" class="btn btn-info btn-lg btn-block">@sizes[0]</button></td>
                        </tr>
                        <tr class="text-center">
                            <td>  <button type="button" @onclick="(()=>select(sizes[1]))" class="btn btn-info btn-lg btn-block">@sizes[1]</button></td>
                        </tr>
                        <tr class="text-center">
                            <td>  <button type="button" @onclick="(()=>select(sizes[2]))" class="btn btn-info btn-lg btn-block">@sizes[2]</button></td>
                        </tr>
                        <tr class="text-center">
                            <td>  <button type="button" @onclick="(()=>select(sizes[3]))" class="btn btn-info btn-lg btn-block">@sizes[3]</button></td>
                        </tr>
                        <tr class="text-center">
                            <td>  <button type="button" @onclick="(()=>select(sizes[4]))" class="btn btn-info btn-lg btn-block">@sizes[4]</button></td>
                        </tr>
                        <tr class="text-center">
                            <td>  <button type="button" @onclick="(()=>select(sizes[5]))" class="btn btn-info btn-lg btn-block">@sizes[5]</button></td>
                        </tr>
                        <tr class="text-center">
                            <td>  <button type="button" @onclick="(()=>select(sizes[6]))" class="btn btn-info btn-lg btn-block">@sizes[6]</button></td>
                        </tr>
                        <tr class="text-center">
                            <td>  <button type="button" @onclick="(()=>select(sizes[7]))" class="btn btn-info btn-lg btn-block">@sizes[7]</button></td>
                        </tr>
                        <tr class="text-center">
                            <td>  <button type="button" @onclick="(()=>select(sizes[8]))" class="btn btn-info btn-lg btn-block">@sizes[8]</button></td>
                        </tr>
                        <tr class="text-center">
                            <td>  <button type="button" @onclick="(()=>select(sizes[9]))" class="btn btn-info btn-lg btn-block">@sizes[9]</button></td>
                        </tr>
                        <tr class="text-center">
                            <td>  <button type="button" style="color:lawngreen" @onclick="Add" class="btn btn-secondary btn-lg">+</button></td>
                        </tr>
                    </tbody>
                </table>
                
            </div>


        </div>



    </div>





</div>







@code {
    private IList<Measurement> Model2;
    [Parameter]
    public string measurementPositionId { get; set; }

    public int[,] positions = new int[10, 4];




    protected async override Task OnInitializedAsync()
    {
        Model2 = await this.repo.Get(Endpoints.MeasurementEndpoint);
        for (int i = 0; i < sizes.Length; i++)
        {

            sizes[i] = start;
            start = start + 1;
        }

        for(int i =0; i < positions.GetLength(0); i++)
        {
            for(int j = 0; j < positions.GetLength(1); j++)
            {
                positions[i, j] = 0;
            }
        }
    }

    private int actPos;

    private int[] sizes = new int[10];
    private int start = 27;

    private int selectedCellI =0;
    private int selectedCellJ = 0;
    private int[] positionValues = new int[3];
    private int positionValue;


    private void select(int value)
    {
        positionValues[actPos] = value;
        positions[selectedCellI,selectedCellJ] = value;


    }

    private void selectTableCell(int ii, int jj)
    {
         
        selectedCellI = ii;
        selectedCellJ = jj;
    }

    private void BacktochooseDimension(MouseEventArgs e)
    {

        this.navManager.NavigateTo($"/measurements/{measurementPositionId}/create/measurementdimensions");
    }


    private void Reduce(MouseEventArgs e)
    {
        for (int i = 0; i < sizes.Length; i++)
        {

            sizes[i] = sizes[i] - 10;
        }

    }


    private void Add(MouseEventArgs e)
    {
        //  Color = "black";

        for (int i = 0; i < sizes.Length; i++)
        {

            sizes[i] = sizes[i] + 10;
        }
    }


}
